<!DOCTYPE html>
<!-- saved from url=(0036)http://cs231n.github.io/assignment1/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>CS224d: Deep Learning for Natural Language Processing</title>
    <meta name="viewport" content="width=device-width">
    <meta name="description" content="Course materials and notes for Stanford class CS224d: Deep Learning for Natural Language Processing.">
    <link rel="canonical" href="http://cs224d.stanford.edu/assignment1/index_files/index.html">

    <!-- Custom CSS -->
    <link rel="stylesheet" href="PS1_files/main.css">

    <!-- Google fonts -->
    <link href="PS1_files/css.txt" rel="stylesheet" type="text/css">
    
<style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Hover_Arrow {position: absolute; width: 15px; height: 11px; cursor: pointer}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">.MathJax_Preview .MJXc-math {color: inherit!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXc-script {font-size: .8em}
.MJXc-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXc-bold {font-weight: bold}
.MJXc-italic {font-style: italic}
.MJXc-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXc-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXc-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXc-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXc-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXc-largeop {font-size: 150%}
.MJXc-largeop.MJXc-int {vertical-align: -.2em}
.MJXc-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXc-display {display: block; text-align: center; margin: 1em 0}
.MJXc-math span {display: inline-block}
.MJXc-box {display: block!important; text-align: center}
.MJXc-box:after {content: " "}
.MJXc-rule {display: block!important; margin-top: .1em}
.MJXc-char {display: block!important}
.MJXc-mo {margin: 0 .15em}
.MJXc-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXc-denom {display: inline-table!important; width: 100%}
.MJXc-denom > * {display: table-row!important}
.MJXc-surd {vertical-align: top}
.MJXc-surd > * {display: block!important}
.MJXc-script-box > *  {display: table!important; height: 50%}
.MJXc-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXc-script-box > *:last-child > * {vertical-align: bottom}
.MJXc-script-box > * > * > * {display: block!important}
.MJXc-mphantom {visibility: hidden}
.MJXc-munderover {display: inline-table!important}
.MJXc-over {display: inline-block!important; text-align: center}
.MJXc-over > * {display: block!important}
.MJXc-munderover > * {display: table-row!important}
.MJXc-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXc-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXc-mtr {display: table-row!important}
.MJXc-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXc-mtr > .MJXc-mtd:first-child {padding-left: 0}
.MJXc-mtr:first-child > .MJXc-mtd {padding-top: 0}
.MJXc-mlabeledtr {display: table-row!important}
.MJXc-mlabeledtr > .MJXc-mtd:first-child {padding-left: 0}
.MJXc-mlabeledtr:first-child > .MJXc-mtd {padding-top: 0}
.MJXc-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXc-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXc-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXc-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXc-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXc-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXc-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXc-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXc-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXc-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXc-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_CHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style></head>

   <body><div id="MathJax_Message" style="display: none;"></div>

    <header class="site-header">

  <div class="wrap title-wrap">
    <a class="site-title" href="http://cs224d.stanford.edu/">CS224d: Deep Learning for Natural Language Processing</a>
  </div>

</header>


    <div class="page-content">
      <div class="wrap">
      <div class="post">

  <header class="post-header">
    <h1></h1>
  </header>

  <article class="post-content">


<p><b>Due Date: 4/16 (Thu) 11:59 PM PST.</b></p>

<p>In this assignment we will familiarize you with basic concepts of 
neural networks, word vectors, and their application to sentiment 
analysis.</p>

<h2>Setup</h2>

<p><i>Note: Please be sure you have Python 2.7.x installed on your 
system. The following instructions should work on Mac or Linux. If you 
have any trouble getting set up, please come to office hours and the TAs
 will be happy to help.</i></p>

<p><b>Get the code</b>: <a href="http://cs224d.stanford.edu/assignment1/assignment1.zip">Download the starter code here</a> and <a href="http://cs224d.stanford.edu/assignment1/assignment1.pdf">the complementary written problems here</a>.</p>

<p><b>[Optional] virtual environment</b>: Once you have unzipped the starter code, you might want to create a <a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/">virtual environment</a>
 for the project. If you choose not to use a virtual environment, it is 
up to you to make sure that all dependencies for the code are installed 
on your machine. To set up a virtual environment, run the following:</p>

<div class="highlight">
<pre><code class="language-bash" data-lang="bash"><span class="nb">cd</span> assignment1
sudo pip install virtualenv      <span class="c"># This may already be installed</span>
virtualenv .env                  <span class="c"># Create a virtual environment</span>
<span class="nb">source</span> .env/bin/activate         <span class="c"># Activate the virtual environment</span>
pip install -r requirements.txt  <span class="c"># Install dependencies</span>
<span class="c"># Work on the assignment for a while ...</span>
deactivate                       <span class="c"># Exit the virtual environment</span>
</code></pre>
</div>

<p><b>Install requirements (without a virtual environment)</b>: To install the required packages locally without setting up a virtual environment, run the following:</p>

<div class="highlight">
<pre><code class="language-bash" data-lang="bash"><span class="nb">cd</span> assignment1
pip install -r requirements.txt  <span class="c"># Install dependencies</span>
</code></pre>
</div>

<p><b>Download data</b>: Once you have the starter code, you will need to download the Stanford Sentiment Treebank dataset. Run the following from the <code>assignment1</code> directory:</p>

<div class="highlight">
<pre><code class="language-bash" data-lang="bash"><span class="nb">cd</span> cs224d/datasets
./get_datasets.sh
</code></pre>
</div>

<p><b>Start IPython</b>: After you have the Stanford Sentiment data, you should start the IPython notebook server from the <code>assignment1</code> directory. If you are unfamiliar with IPython, you should read this <a href="http://cs231n.github.io/ipython-tutorial">IPython tutorial</a>.</p>

<a name="submit"></a><h2>Submitting your work</h2>

<p>Once you are done working, put the written part in the same directory as your IPython notebook file, and run the <code>collectSubmission.sh</code> script; this will produce a file called <code>assignment1.zip</code>. Rename this file to <code>&lt;your-sunet-id&gt;.zip</code>, for instance if your stanford email is <code>jdoe@stanford.edu</code>, your file name should be
</p><div class="highlight">
<pre><code class="language-bash" data-lang="bash"><span class="nb">cd</span> cs224d/datasets
jdoe.zip
</code></pre>
</div>
Upload this file to <a href="https://stanford.box.com/signup/collablink/d_3367429916/116c2072133f72">the Box for this assignment</a>.<p></p>

<p>For the written component, please upload a PDF file of your solutions to <a href="https://scoryst.com/course/67/submit/">Scoryst</a>. Please <a href="https://scoryst.com/enroll/MUPJ5J2xd9/">sign up</a>
 with your stanford email and SUNet ID (letter ID) if applicable. When 
asked to map question parts to your PDF, please map the parts 
accordingly as courtesy to your TAs. The last part of each problem is a 
placeholder for the programming component, you could just map it to the 
page of the last part in your written assignment.</p>

<h2>Tasks</h2>

<p>There will be four parts to this assignment, the first three comprise
 of a written component and a programming component in the IPython 
notebook. The fourth part is purely programming-based, and we also give 
you an opportunity to earn extra credits by doing a programming-based 
optional part. For all of the tasks, you will be using the IPython 
notebook <code>wordvec_sentiment.ipynb</code>.</p>

<h3>Q1: Softmax (10 points)</h3>

<h3>Q2: Neural Network Basics (30 points)</h3>

<h3>Q3: word2vec (40 points)</h3>

<h3>Q4: Sentiment Analysis (20 points)</h3>

<p>For these four parts, please try to finish the written component 
before writing code. We designed the written component to help you think
 through the details in your code implementation. For each part, the 
written component is worth 40% the points of that part, and programming 
is 60%.</p>

<h3>Extra Credit (optional): Improve Your Sentiment Analysis Model (+10 points)</h3>

<p>For this optional part, please follow the instructions in the IPython
 notebook to finish your implementation and report results. Extra credit
 will be awarded based on relative progress.</p>


    <!-- mathjax -->
    <script type="text/javascript" src="PS1_files/MathJax.htm"></script>
    
<div id="feedly-mini" title="feedly Mini tookit"></div>
</article></div></div></div></body></html>